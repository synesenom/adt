- var name = "heatmap"
- var links = {minjs: "widgets.heatmap", source: "widgets.heatmap", docs: "widgets.heatmap"}
- var libs = ["d3.v5", "lodash.4.17.4", "ranjs.1.9.1"]
- var modules = ["widget", "widgets.heatmap"]
- var description = "Heat maps can be used to show <span class='good'>spatial distributions</span>. Due to its higher resolution (compared to the <a href='./widgets.contourplot.html'>contour plot</a>) it is suitable for <span class='good'>spatially fast changes</span>."
include pug/example
script.doc.
    // create chart
    var width = parseFloat(d3.select("#widget").style("width"));
    var height = parseFloat(d3.select("#widget").style("height"));
    var normal1 = new ran.dist.Normal(7, 2);
    var normal2 = new ran.dist.Normal(1, 3);
    var heatmap = new du.widgets.HeatMap("mychart", "#widget")
        .width(width)
        .height(height)
        .xLabel("x")
        .yLabel("y")
        .margins(40)
        .fontSize(14)
        .grid([80, 40])
        .colors(['transparent', 'yellowgreen', 'crimson'])
        .data(new Array(100000).fill(0).map(function () {
            return Math.random() < 0.3 ? {
                x: normal1.sample(),
                y: normal2.sample()
            } : {
                x: normal2.sample(),
                y: normal1.sample()
            };
        }))
        .tooltip(true)
        .tooltipTitleFormat(function(x) { return 'Height: ' + parseInt(x) + 'm'; })
        .tooltipXFormat(function(x) { return x.toFixed(2); })
        .tooltipYFormat(function(x) { return x.toFixed(2); })
        .render();
script.doc.
    // update data
    setInterval(function() {
        var r = Math.random();
        heatmap.data(new Array(100000).fill(0).map(function () {
            return Math.random() < r ? {
                x: normal1.sample(),
                y: normal2.sample()
            } : {
                x: normal2.sample(),
                y: normal1.sample()
            };
        })).render();
    }, 20000);
+resize()
