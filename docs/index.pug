- var name = "dashboard-utils"
- var dependencyDir = "dependencies/"
- var cssDependencies = ["wp"]
- var jsDependencies = ["highlight.9.12.0"]
- var sections = [{name: "description", content: "<span style='color:royalblue;font-weight:bold'>dashboard-utils</span> is a collection of useful modules for building interactive dashboards. It is built on top of the original <a href=\'https://github.com/sonyxperiadev/adt\'>adt</a> library that Sony Mobile was so generous to open source."}, {name: "installing", children: [{name: "browser", content: "Just include the required modules (and their dependencies):<pre><code class='css'>&lt;script src='module_name.min.js'&gt;&lt;/script&gt;</code></pre>"}, {name: "node", content: "<pre><code class='bash'>npm install dashboard-utils</code></pre>"}]}, {name: "requirements", content: "Some of the modules rely on external libraries. Here is a complete list of all dependencies:<dl class='custom'><dt><code>d3@4</code></dt><dd>SVG manipulation library. [ <a href='https://d3js.org'>website</a> ]</dd><dt><code>topojson</code></dt><dd>Module for reading TopoJSON files. [ <a href='https://github.com/topojson'>github</a> ]</dd></dl>For module specific dependencies, see the documentation."}, {name: "catalogue", content: "<a href='catalogue'>Here</a> is a list of some example code and features to help you start off with the library."}, {name: "docs", content: "Below you find the contents of the API documentation for the modules. With the exception of the widgets, each module is a standalone script that can be loaded and used as it is right out of the box. For the widgets, the module <code>du.widget</code> needs to be loaded first.", children: [{name: "data", content: "A collection of useful data structures for representing and manipulating various data sets.", docs: true, source: true}, {name: "math", content: "Various mathematical structures and methods.", children: [{name: "math.la", content: "Linear algebra related classes and methods", docs: true, source: true}]}, {name: "rest", content: "Some convenience methods for accessing REST APIs for different file formats.", docs: true, source: true}, {name: "signals", content: "A module for managing event subscriptions and event emitters.", docs: true, source: true}, {name: "system", content: "Namespace for system related operations such as logging and version management.", children: [{name: "system.log", content: "An enhanced logger for development and monitoring during production.", docs: true, source: true}, {name: "system.version", content: "Module for automatic version checking and version updates.", docs: true, source: true}]}, {name: "user", content: "Collection of methods for handling different user inputs", docs: true, source: true}, {name: "widget", content: "The base class for all widgets. Methods implemented for this class are available for all dashboard components.", docs: true, source: true}, {name: "widgets", content: "The namespace of all available dashboard widgets. Widgets can be charts showing data, control elements to interact with the data or static labels or hints.", children: [{name: "widgets.areachart", content: "An interactive area chart for volume like data.", docs: true, source: true, example: true}, {name: "widgets.barchart", content: "An interactive bar chart for categorical data.", docs: true, source: true, example: true}, {name: "widgets.boxplot", content: "An interactive box plot for multiple distributions.", docs: true, source: true, example: true}, {name: "widgets.bubblechart", content: "An interactive bubble chart for small multidimensional data.", docs: true, source: true, example: true}, {name: "widgets.checkbox", content: "Clean checkboxes.", docs: true, source: true, example: true}, {name: "widgets.chordchart", content: "An interactive chord chart to visualize flow data.", docs: true, source: true, example: true}, {name: "widgets.grid", content: "A flexible grid that can contain and manage multiple other widgets.", docs: true, source: true, example: true}, {name: "widgets.hint", content: "Small text bubbles for providing aid to the user about the dashboard elements.", docs: true, source: true, example: true}, {name: "widgets.histogram", content: "An interactive histogram for simple distributions.", docs: true, source: true, example: true}, {name: "widgets.infobox", content: "An information window that can be used to provide more detailed description (help menu, about) for the dashboard", docs: true, source: true, example: true}, {name: "widgets.label", content: "A static piece of text.", docs: true, source: true, example: true}, {name: "widgets.legend", content: "A block of labels with colored squares to interact with the different quantities shown on the dashboard.", docs: true, source: true, example: true}, {name: "widgets.lineargauge", content: "Gauge bar to show meaning of a value.", docs: true, source: true, example: true}, {name: "widgets.linechart", content: "An interactive line chart for trend type data.", docs: true, source: true, example: true}, {name: "widgets.map", content: "An interactive world map with convenience methods to show static or dynamic data.", docs: true, source: true, example: true}, {name: "widgets.multibarchart", content: "Bar chart with multiple plots.", docs: true, source: true, example: true}, {name: "widgets.picture", content: "A static image.", docs: true, source: true, example: true}, {name: "widgets.piechart", content: "An interactive pie chart for visualizing low dimensional categorical data.", docs: true, source: true, example: true}, {name: "widgets.progressbar", content: "Widget showing the status of a progress.", docs: true, source: true, example: true}, {name: "widgets.scatterplot", content: "An interactive scatter plot for large correlated data sets.", docs: true, source: true, example: true}, {name: "widgets.semicirculargauge", content: "Semi-circular shaped gauge bar to show meaning of a value.", docs: true, source: true, example: true}, {name: "widgets.slider", content: "A slider control element to interact with the data in one dimension.", docs: true, source: true, example: true}, {name: "widgets.status", content: "A static label with a value that can be dynamically updated.", docs: true, source: true, example: true}, {name: "widgets.trackpad", content: "A two dimensional slider.", docs: true, source: true, example: true}, {name: "widgets.violinplot", content: "An interactive violin plot for detailed comparison of distributions.", docs: true, source: true, example: true}]}]}];

//- Adds menu entries recursively
mixin menuEntry(e, id, level)
    unless e.children
        a(href='#'+id) #{e.name}
    else
        input(id='s' + level + '-' + e.name, type='checkbox')
        label(for='s' + level + '-' + e.name) #{e.name}
        div(class='s' + level)
            each child in e.children
                +menuEntry(child, id+'-'+child.name, level+1)

//- Adds content entries recursively
mixin contentEntry(e, id, level)
    - var tag = 'h' + level
    #{tag}(id=id) #{e.name}
    if e.content
        | !{e.content}
    br
    if e.example
        a.margined(href='catalogue/' + e.name + '.html') example
    if e.docs
        a.margined(href='api/' + e.name + '.html') documentation
    if e.source
        a(href='dl/' + e.name + '.min.js') source
    if e.children
        each child in e.children
            +contentEntry(child, id + '-' + child.name, level+1)

doctype html
html(lang='en')
head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    link(rel='stylesheet', href='https://fonts.googleapis.com/css?family=Montserrat:400,700')
    each css in cssDependencies
        link(rel='stylesheet', type='text/css', href=dependencyDir + css + '.min.css')
    link(rel='stylesheet', type='text/css', href='style/examples.css')
    each js in jsDependencies
        script(src=dependencyDir + js + '.min.js')
    script.
        hljs.initHighlightingOnLoad();
    title home | #{name}
body
    a(href="https://github.com/synesenom/dashboard-utils" class="github-corner" style="display: block; position: fixed; top: 0; border: 0; right: 0" aria-label="View source on GitHub")
        svg(width="80" height="80" viewBox="0 0 250 250" style="fill:royalblue; color:#fff; position: absolute; top: 0; border: 0; right: 0; z-index: 999" aria-hidden="true")
            path(d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z")
            path(d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm")
            path(d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill="currentColor" class="octo-body")
    style.
        .github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}

    input#menu(type='checkbox')
    label#open(for='menu') â˜°

    //- Navigation bar
    aside
        .logo #{name}
        nav
            div
                each section in sections
                    +menuEntry(section, section.name, 1)

    //- Main content
    main(style='margin-bottom:30px')
        label#exit(for='menu')
        each section in sections
            +contentEntry(section, section.name, 1)