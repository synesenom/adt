(function(t,e){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=e(require("d3"),require("./widget"),exports)}else if(typeof define==="function"&&define.amd){define(["d3","src/widget","exports"],e)}else{t.du=t.du||{};t.du.widgets=t.du.widgets||{};t.du.widgets.LineChart=e(t.d3,t.du.Widget)}})(this,function(v,r){"use strict";function t(t,e){var x=r.call(this,t,"linechart","svg",e);x.attr.add(this,"xMin",null);x.attr.add(this,"xMax",null);x.attr.add(this,"xType","number");x.attr.add(this,"lineStyles",null);x.attr.add(this,"smooth",false);x.attr.add(this,"dots",false);var d={},p=[],u=false,f={},y={},h={};this.data=function(t){p=t.map(function(t){return{name:t.name,values:t.values.sort(function(t,e){return t.x-e.x}).map(function(t){return{x:t.x,y:t.y,lo:t.lo||0,hi:t.hi||0}})}});return this};this.highlight=function(t,e){if(!u){x.utils.highlight(this,d,".line",t,e);x.utils.highlight(this,d,".error",t,e);x.utils.highlight(this,d,".marker",t,e)}return this};function m(t,e){var r=t.getTotalLength();var a=0;var n=r;var s=(a+n)/2;e=Math.max(e,t.getPointAtLength(0).x);e=Math.min(e,t.getPointAtLength(r).x);while(s>=a&&s<=r){var l=t.getPointAtLength(s);if(Math.abs(l.x-e)<1e-4){return l.y}else if(l.x>e){n=s}else{a=s}s=(a+n)/2}}function o(e,t,r){var a=p.filter(function(t){return t.name===e})[0];if(!a){return null}var n=v.bisector(function(t){return t.x}).left;var s=n(a.values,t);var l=n(a.values,r);if(s===null||l===null){return null}var i=a.values[s].x,o=a.values[s].y,c=a.values[l].x,u=a.values[l].y;var y=o<u?i:c;var x=o<u?u:o;return{start:{x:i,y:o},end:{x:c,y:u},corner:{x:y,y:x}}}this.addMarker=function(t,r,a,n,e){if(y.hasOwnProperty(t)){return null}var s=o(r,a,n);var l=d.g.append("g").attr("class","marker "+x.utils.encode(r));l.append("line").attr("class","horizontal").attr("x1",d.scale.x(Math.max(s.start.x,x.attr.xMin?x.attr.xMin:s.start.x))+2).attr("y1",d.scale.y(s.corner.y)).attr("x2",d.scale.x(Math.min(s.end.x,x.attr.xMax?x.attr.xMax:s.end.x))+2).attr("y2",d.scale.y(s.corner.y)).style("stroke",f[r]).style("stroke-dasharray","3 3").style("stroke-width",1);l.append("line").attr("class","vertical").attr("x1",d.scale.x(s.corner.x)+2).attr("y1",d.scale.y(s.start.y)).attr("x2",d.scale.x(s.corner.x)+2).attr("y2",d.scale.y(s.end.y)).style("stroke",f[r]).style("stroke-dasharray","3 3").style("stroke-width",1);l.append("circle").attr("class","start").attr("cx",d.scale.x(s.start.x)+2).attr("cy",d.scale.y(s.start.y)).attr("r",4).style("stroke","none").style("fill",f[r]);l.append("circle").attr("class","end").attr("cx",d.scale.x(s.end.x)+2).attr("cy",d.scale.y(s.end.y)).attr("r",4).style("stroke","none").style("fill",f[r]);l.append("text").attr("x",d.scale.x(s.corner.x)+2).attr("y",d.scale.y(s.corner.y)).attr("dy",-5).attr("text-anchor",s.start.y<s.end.y?"start":"end").style("fill",x.attr.fontColor).style("font-family","inherit").style("font-size","0.9em").text(e);var i={key:r,g:l,update:function(t){var e=o(r,a,n);l.select(".horizontal").transition().duration(t).attr("x1",d.scale.x(Math.max(e.start.x,x.attr.xMin?x.attr.xMin:e.start.x))+2).attr("y1",d.scale.y(e.corner.y)).attr("x2",d.scale.x(Math.min(e.end.x,x.attr.xMax?x.attr.xMax:e.end.x))+2).attr("y2",d.scale.y(e.corner.y)).style("stroke",f[this.key]);l.select(".vertical").transition().duration(t).attr("x1",d.scale.x(e.corner.x)+2).attr("y1",d.scale.y(e.start.y)).attr("x2",d.scale.x(e.corner.x)+2).attr("y2",d.scale.y(e.end.y)).style("stroke",f[this.key]);l.select(".start").transition().duration(t).attr("cx",d.scale.x(e.start.x)+2).attr("cy",d.scale.y(e.start.y)).style("fill",f[this.key]);l.select(".end").transition().duration(t).attr("cx",d.scale.x(e.end.x)+2).attr("cy",d.scale.y(e.end.y)).style("fill",f[this.key]);l.select("text").transition().duration(t).attr("x",d.scale.x(e.corner.x)+2).attr("y",d.scale.y(e.corner.y)).attr("text-anchor",e.start.y<e.end.y?"start":"end").style("fill",x.attr.fontColor)}};y[t]=i;return i};this.removeMarker=function(t){if(y.hasOwnProperty(t)){y[t].g.remove();delete y[t];return true}return false};this.addPin=function(t,e,r,a,n){if(h.hasOwnProperty(t)){return null}var s=d.g.append("g").attr("class","pin");s.append("line").attr("class","pin-needle").attr("x1",d.scale.x(e)+2).attr("y1",d.scale.y.range()[0]).attr("x2",d.scale.x(e)+2).attr("y2",(1-(n||1))*d.scale.y.range()[0]).style("stroke",r||x.attr.fontColor).style("stroke-width",1);s.append("circle").attr("class","pin-head").attr("cx",d.scale.x(e)+2).attr("cy",(1-(n||1))*d.scale.y.range()[0]).attr("r",(a||6)+"px").style("stroke","white").style("stroke-width","2px").style("fill",r||x.attr.fontColor);var l={g:s,update:function(t){s.select(".pin-needle").transition().duration(t).attr("x1",d.scale.x(e)+2).attr("y1",d.scale.y.range()[0]).attr("x2",d.scale.x(e)+2).attr("y2",(1-(n||1))*d.scale.y.range()[0]);s.select(".pin-head").transition().duration(t).attr("cx",d.scale.x(e)+2).attr("cy",(1-(n||1))*d.scale.y.range()[0])}};h[t]=l;return l};this.removePin=function(t){if(h.hasOwnProperty(t)){h[t].g.remove();delete h[t];return true}return false};x.utils.tooltip=function(o){var e=v.bisector(function(t){return d.scale.x(t.x)}).left;var c=o?p.map(function(t){return e(t.values,o[0])}):null;if(c===null){for(var t in this.tt){if(this.tt.hasOwnProperty(t))this.tt[t].remove()}this.tt=null;return}else{this.tt=this.tt||{};var u=this.tt}var y=d.scale.x.invert(o[0]);var r=p.map(function(t,e){var r=c[e],a=t.values,n=a[r-1]?a[r-1]:a[r],s=a[r]?a[r]:a[r-1],l=y-n.x>s.x-y?s:n;y=l.x;var i=m(d.plots.paths[t.name],o[0]);u[t.name]=u[t.name]||d.g.append("circle");u[t.name].attr("cx",o[0]).attr("cy",i).attr("r",4).style("fill",f[t.name]);return{name:t.name,color:f[t.name],dashed:x.attr.lineStyles&&x.attr.lineStyles[t.name]?true:undefined,value:x.attr.tooltipYFormat(l.y)}});return{title:x.attr.tooltipXFormat(y),content:{type:"plots",data:r}}};x.render.build=function(){d=x.utils.standardAxis();d.plots={}};x.render.update=function(t){var e=p.map(function(t){return{name:t.name,values:t.values.filter(function(t){return(x.attr.xMax===null||t.x<=x.attr.xMax)&&(x.attr.xMin===null||t.x>=x.attr.xMin)})}});var r=e.reduce(function(t,e){return t.concat(e.values)},[]);var a=v.min(r,function(t){return t.y-(t.lo?t.lo:0)});var n=v.max(r,function(t){return t.y+(t.hi?t.hi:0)});d.scale={x:x.utils.scale(e.reduce(function(t,e){return t.concat(e.values)},(x.attr.xMin?[{x:x.attr.xMin}]:[]).concat(x.attr.xMax?[{x:x.attr.xMax}]:[])).map(function(t){return t.x}),[0,x.attr.innerWidth]),y:x.utils.scale(e.reduce(function(t,e){return t.concat(e.values)},[]).map(function(t){return t.y}).concat([a,n]),[x.attr.innerHeight,0])};var s=v.line().x(function(t){return d.scale.x(t.x)}).y(function(t){return d.scale.y(t.y)}).curve(x.attr.smooth?v.curveMonotoneX:v.curveLinear);var l=v.area().x(function(t){return d.scale.x(t.x)}).y0(function(t){return d.scale.y(Math.max(t.y-t.lo,a))}).y1(function(t){return d.scale.y(Math.min(t.y+t.hi,n))}).curve(x.attr.smooth?v.curveMonotoneX:v.curveLinear);d.axes.x.transition().duration(t).call(d.axisFn.x.tickValues(x.attr.xTicks).scale(d.scale.x));d.axes.y.transition().duration(t).call(d.axisFn.y.tickValues(x.attr.yTicks).scale(d.scale.y));f=x.utils.colors(p?p.map(function(t){return t.name}):null);d.plots.groups=d.g.selectAll(".plot-group").data(e,function(t){return t.name});d.plots.groups.exit().transition().duration(t).style("opacity",0).remove();var i=d.plots.groups.enter().append("g").attr("class",function(t){return"plot-group "+x.utils.encode(t.name)}).style("shape-rendering","geometricPrecision").style("stroke","transparent").style("fill","transparent");d.plots.groups=i.merge(d.plots.groups).each(function(){u=true}).on("mouseover",function(t){x.attr.mouseover&&x.attr.mouseover(t.name)}).on("mouseleave",function(t){x.attr.mouseleave&&x.attr.mouseleave(t.name)}).on("click",function(t){x.attr.click&&x.attr.click(t.name)});d.plots.groups.transition().duration(t).style("fill",function(t){return f[t.name]}).style("stroke",function(t){return f[t.name]}).on("end",function(){u=false});d.plots.errors=d.plots.groups.selectAll(".error").data(function(t){return[t]});d.plots.errors.exit().transition().duration(t).style("opacity",0).remove();d.plots.errors.enter().append("path").attr("class",function(t){return"error "+x.utils.encode(t.name)}).style("opacity",0).style("stroke","none").merge(d.plots.errors).transition().duration(t).attr("d",function(t){return l(t.values)}).style("opacity",1).style("fill-opacity",.2);d.plots.paths={};d.plots.lines=d.plots.groups.selectAll(".line").data(function(t){return[t]});d.plots.lines.exit().transition().duration(t).style("opacity",0).remove();d.plots.lines.enter().append("path").attr("class",function(t){return"line "+x.utils.encode(t.name)}).style("opacity",0).style("fill","none").merge(d.plots.lines).transition().duration(t).style("opacity",1).attr("d",function(t){return s(t.values)}).style("stroke-width","2px").style("stroke-dasharray",function(t){return x.attr.lineStyles&&x.attr.lineStyles[t.name]?x.attr.lineStyles[t.name]:null}).on("end",function(t){u=false;d.plots.paths[t.name]=v.select(this).node()});if(x.attr.dots){d.plots.dots=d.plots.groups.selectAll(".dot").data(function(t){return t.values});d.plots.dots.exit().transition().duration(t).style("opacity",0).remove();d.plots.dots.enter().append("circle").attr("class","dot").style("opacity",0).attr("cx",function(t){return d.scale.x(t.x)}).attr("cy",function(t){return d.scale.y(t.y)}).merge(d.plots.dots).transition().duration(t).style("opacity",1).attr("r",3).attr("cx",function(t){return d.scale.x(t.x)}).attr("cy",function(t){return d.scale.y(t.y)})}for(var o in y){if(y.hasOwnProperty(o)){y[o].update(t)}}for(var c in h){if(h.hasOwnProperty(c)){h[c].update(t)}}};x.render.style=function(){d.g.attr("width",x.attr.innerWidth+"px").attr("height",x.attr.innerHeight+"px").attr("transform","translate("+x.attr.margins.left+","+x.attr.margins.top+")").style("pointer-events","all");d.axisFn.x.tickFormat(x.attr.xTickFormat);d.axes.x.attr("transform","translate(0,"+x.attr.innerHeight+")");d.axisFn.y.tickFormat(x.attr.yTickFormat);d.axes.y.attr("transform","translate(0,"+1+")");d.g.selectAll(".tick > line").style("shape-rendering","geometricPrecision").style("stroke-width","1px");d.labels.x.attr("x",x.attr.innerWidth+"px").attr("y",x.attr.innerHeight+2.8*x.attr.fontSize+"px").style("fill",x.attr.fontColor).style("font-size",x.attr.fontSize+"px").text(x.attr.xLabel);d.labels.y.attr("x",5+"px").attr("y",-5+"px").style("fill",x.attr.fontColor).style("font-size",x.attr.fontSize+"px").text(x.attr.yLabel)}}t.prototype=Object.create(r.prototype);return t});